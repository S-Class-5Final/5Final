<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 	1.
	DataSource 등록(어떤 DBMS와 계정에 연결할지)은 서버연동과 같이 이루어져야 되기 때문에 root-context에서 설정한다. 
	이때 등록 순서는 중요하다. 먼저 dataSource를 bean으로 등록해야만 아래에서 이 dataSource를 참조할 수 있다.
	
	 -->
	
	<!-- DB에 있는 데이터를 불러오기 전에 연결을 하기 위한 bean객체 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<!-- destroy-method="close"는 주어진 세션을 자동으로 close하라는 의미(close메소드 자동 실행) -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="amanda"/>
		<property name="password" value="amanda"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 경로에서 classpath:은 webapp 위에 있는 resources폴더를 의미한다. -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"/>
	</bean>
	<!-- 다시 한 번 짚고 넘어가자
		bean객체를 만드는 방법은
		property 태그를 통한 방법 => setter DI
		constructor-arg 태그를 통한 방법 => 생성자 DI
	 -->
	
	<!-- mybatis-config.xml로 가서 작성 -->
	<!-- 2. 파일 업로드 시 사용(파일 크기 지정) -->
	<bean id = "multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value = "100000000"/>
		<property name="maxInMemorySize" value="100000000"/>
	</bean>
	
	
		
</beans>
